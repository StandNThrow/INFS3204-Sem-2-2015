//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookStore.BookStoreServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/BookStore")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bookAuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bookIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string bookNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float bookPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int bookStockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int bookYearField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bookAuthor {
            get {
                return this.bookAuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.bookAuthorField, value) != true)) {
                    this.bookAuthorField = value;
                    this.RaisePropertyChanged("bookAuthor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bookID {
            get {
                return this.bookIDField;
            }
            set {
                if ((object.ReferenceEquals(this.bookIDField, value) != true)) {
                    this.bookIDField = value;
                    this.RaisePropertyChanged("bookID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string bookName {
            get {
                return this.bookNameField;
            }
            set {
                if ((object.ReferenceEquals(this.bookNameField, value) != true)) {
                    this.bookNameField = value;
                    this.RaisePropertyChanged("bookName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float bookPrice {
            get {
                return this.bookPriceField;
            }
            set {
                if ((this.bookPriceField.Equals(value) != true)) {
                    this.bookPriceField = value;
                    this.RaisePropertyChanged("bookPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int bookStock {
            get {
                return this.bookStockField;
            }
            set {
                if ((this.bookStockField.Equals(value) != true)) {
                    this.bookStockField = value;
                    this.RaisePropertyChanged("bookStock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int bookYear {
            get {
                return this.bookYearField;
            }
            set {
                if ((this.bookYearField.Equals(value) != true)) {
                    this.bookYearField = value;
                    this.RaisePropertyChanged("bookYear");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookStoreServiceReference.IBookStoreService")]
    public interface IBookStoreService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/GetAllBooks", ReplyAction="http://tempuri.org/IBookStoreService/GetAllBooksResponse")]
        BookStore.BookStoreServiceReference.Book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/GetAllBooks", ReplyAction="http://tempuri.org/IBookStoreService/GetAllBooksResponse")]
        System.Threading.Tasks.Task<BookStore.BookStoreServiceReference.Book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/addBook", ReplyAction="http://tempuri.org/IBookStoreService/addBookResponse")]
        bool addBook(BookStore.BookStoreServiceReference.Book newBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/addBook", ReplyAction="http://tempuri.org/IBookStoreService/addBookResponse")]
        System.Threading.Tasks.Task<bool> addBookAsync(BookStore.BookStoreServiceReference.Book newBook);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/deleteBook", ReplyAction="http://tempuri.org/IBookStoreService/deleteBookResponse")]
        bool deleteBook(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/deleteBook", ReplyAction="http://tempuri.org/IBookStoreService/deleteBookResponse")]
        System.Threading.Tasks.Task<bool> deleteBookAsync(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/searchBook", ReplyAction="http://tempuri.org/IBookStoreService/searchBookResponse")]
        BookStore.BookStoreServiceReference.Book[] searchBook(int year);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookStoreService/searchBook", ReplyAction="http://tempuri.org/IBookStoreService/searchBookResponse")]
        System.Threading.Tasks.Task<BookStore.BookStoreServiceReference.Book[]> searchBookAsync(int year);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookStoreServiceChannel : BookStore.BookStoreServiceReference.IBookStoreService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookStoreServiceClient : System.ServiceModel.ClientBase<BookStore.BookStoreServiceReference.IBookStoreService>, BookStore.BookStoreServiceReference.IBookStoreService {
        
        public BookStoreServiceClient() {
        }
        
        public BookStoreServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookStoreServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookStoreServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookStoreServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BookStore.BookStoreServiceReference.Book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<BookStore.BookStoreServiceReference.Book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public bool addBook(BookStore.BookStoreServiceReference.Book newBook) {
            return base.Channel.addBook(newBook);
        }
        
        public System.Threading.Tasks.Task<bool> addBookAsync(BookStore.BookStoreServiceReference.Book newBook) {
            return base.Channel.addBookAsync(newBook);
        }
        
        public bool deleteBook(int year) {
            return base.Channel.deleteBook(year);
        }
        
        public System.Threading.Tasks.Task<bool> deleteBookAsync(int year) {
            return base.Channel.deleteBookAsync(year);
        }
        
        public BookStore.BookStoreServiceReference.Book[] searchBook(int year) {
            return base.Channel.searchBook(year);
        }
        
        public System.Threading.Tasks.Task<BookStore.BookStoreServiceReference.Book[]> searchBookAsync(int year) {
            return base.Channel.searchBookAsync(year);
        }
    }
}
